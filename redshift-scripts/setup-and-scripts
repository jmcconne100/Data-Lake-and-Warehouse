CREATE EXTERNAL SCHEMA lakehouse_glue_schema
FROM data catalog
DATABASE 'lakehouse_glue_db'
IAM_ROLE 'arn:aws:iam::<your-account-id>:role/RedshiftSuperAccessRole'
REGION 'us-west-1';

SELECT schemaname, tablename
FROM svv_external_tables
WHERE schemaname = 'lakehouse_glue_schema';

-- Preview the first 10 customers
SELECT * FROM lakehouse_glue_schema.customers LIMIT 10;

-- Top 5 products by total revenue
SELECT product_id, SUM(CAST(total_price AS DOUBLE PRECISION)) AS total_revenue
FROM lakehouse_glue_schema.orders
GROUP BY product_id
ORDER BY total_revenue DESC
LIMIT 5;

-- Number of Orders Per Month
SELECT DATE_TRUNC('month', CAST(order_date AS DATE)) AS month,
       COUNT(order_id) AS order_count
FROM lakehouse_glue_schema.orders
GROUP BY month
ORDER BY month;

-- Total Orders and Spending Per Customer
SELECT customer_id,
       COUNT(order_id) AS total_orders,
       SUM(CAST(total_price AS DOUBLE PRECISION)) AS total_spent
FROM lakehouse_glue_schema.orders
GROUP BY customer_id
ORDER BY total_spent DESC
LIMIT 10;

-- Top 10 Customers (by ID) by Spending
SELECT customer_id,
       COUNT(order_id) AS total_orders,
       SUM(CAST(total_price AS DOUBLE PRECISION)) AS total_spent
FROM lakehouse_glue_schema.orders
GROUP BY customer_id
ORDER BY total_spent DESC
LIMIT 10;

-- Orders with Product and Category Names
SELECT o.order_id,
       o.order_date,
       p.product_name,
       c.category AS category_name,
       CAST(o.total_price AS DOUBLE PRECISION) AS total_price
FROM lakehouse_glue_schema.orders o
JOIN lakehouse_glue_schema.products p
  ON o.product_id = p.product_id
JOIN lakehouse_glue_schema.dim_categories c
  ON p.category_id = c.category_id
ORDER BY o.order_date DESC
LIMIT 20;

-- Total Revenue by Category
SELECT c.category AS category_name,
       ROUND(SUM(CAST(o.total_price AS DOUBLE PRECISION)), 2) AS total_revenue,
       COUNT(o.order_id) AS total_orders
FROM lakehouse_glue_schema.orders o
JOIN lakehouse_glue_schema.products p
  ON o.product_id = p.product_id
JOIN lakehouse_glue_schema.dim_categories c
  ON p.category_id = c.category_id
GROUP BY c.category
ORDER BY total_revenue DESC;

-- Monthly Revenue by Category
SELECT DATE_TRUNC('month', CAST(o.order_date AS DATE)) AS month,
       c.category AS category_name,
       ROUND(SUM(CAST(o.total_price AS DOUBLE PRECISION)), 2) AS total_revenue
FROM lakehouse_glue_schema.orders o
JOIN lakehouse_glue_schema.products p
  ON o.product_id = p.product_id
JOIN lakehouse_glue_schema.dim_categories c
  ON p.category_id = c.category_id
GROUP BY month, c.category
ORDER BY month, total_revenue DESC;

-- Revenue and Count by Order Status
SELECT status,
       COUNT(order_id) AS total_orders,
       ROUND(SUM(CAST(total_price AS DOUBLE PRECISION)), 2) AS total_revenue
FROM lakehouse_glue_schema.orders
GROUP BY status
ORDER BY total_orders DESC;

-- Monthly Order Status Breakdown
SELECT DATE_TRUNC('month', CAST(order_date AS DATE)) AS month,
       status,
       COUNT(order_id) AS total_orders,
       ROUND(SUM(CAST(total_price AS DOUBLE PRECISION)), 2) AS total_revenue
FROM lakehouse_glue_schema.orders
GROUP BY month, status
ORDER BY month, status;
